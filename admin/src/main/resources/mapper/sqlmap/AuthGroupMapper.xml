<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.apabi.flow.admin.dao.AuthGroupDao">
    <resultMap id="authGroupResult" type="com.apabi.flow.admin.model.AuthGroup">
        <result property="id" column="id" />
        <result property="name" column="name" />
        <result property="orgId" column="org_id" />
        <result property="parentId" column="parent_id" />
        <result property="description" column="description" />
        <result property="crtDate" column="crt_date" />
        <result property="crtUserId" column="crt_user_id" />
        <result property="modifyDate" column="modify_date" />
        <result property="modifyUserId" column="modify_user_id" />
        <result property="enabled" column="enabled" />
    </resultMap>

    <resultMap id="authUserResult" type="com.apabi.flow.admin.model.AuthUser">
        <result property="id" column="id" />
        <result property="userName" column="user_name" />
    </resultMap>

    <resultMap id="authRoleResult" type="com.apabi.flow.admin.model.AuthRole">
        <result property="id" column="id" />
        <result property="roleCode" column="role_code" />
        <result property="name" column="name" />
    </resultMap>

    <resultMap id="getGroupResById" type="com.apabi.flow.admin.model.AuthRes">
        <result property="id" column="id" />
        <result property="menuId" column="menu_id" />
        <result property="parentId" column="parent_id" />
        <result property="code" column="code" />
        <result property="name" column="name" />
        <result property="url" column="url" />
        <result property="type" column="type" />
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="commonColumns">
	    <![CDATA[
        	id ,
        	name ,
        	org_id ,
        	parent_id ,
        	description ,
        	crt_date ,
        	crt_user_id ,
        	modify_date ,
        	modify_user_id ,
        	enabled
	    ]]>
	</sql>

    <sql id="dynamicWhere">
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="name != null">
                AND name = #{name}
            </if>
            <if test="orgId != null">
                AND org_id = #{orgId}
            </if>
            <if test="parentId != null">
                AND parent_id = #{parentId}
            </if>
            <if test="description != null">
                AND description = #{description}
            </if>
            <if test="crtDate != null">
                AND crt_date = #{crtDate}
            </if>
            <if test="crtUserId != null">
                AND crt_user_id = #{crtUserId}
            </if>
            <if test="modifyDate != null">
                AND modify_date = #{modifyDate}
            </if>
            <if test="modifyUserId != null">
                AND modify_user_id = #{modifyUserId}
            </if>
            <if test="enabled != null">
                AND enabled = #{enabled}
            </if>
            <if test="keywords != null">
                AND name like '%'||#{keywords}||'%'
            </if>
        </trim>
    </sql>

    <select id="findByPage" resultMap="authGroupResult">
        select
        <include refid="commonColumns" />
        <![CDATA[
	        from auth_group
	    ]]>
        <include refid="dynamicWhere" />
    </select>

    <insert id="save" parameterType="com.apabi.flow.admin.model.AuthGroup">
      insert into auth_group (id , name , org_id  ,
		parent_id  , description  , crt_date  ,
		crt_user_id  , modify_date  , modify_user_id  ,
		enabled
		)
		values (#{id,jdbcType=NUMERIC}, #{name,jdbcType=VARCHAR}, #{orgId,jdbcType=NUMERIC},
		#{parentId,jdbcType=NUMERIC}, #{description,jdbcType=VARCHAR}, #{crtDate,jdbcType=TIMESTAMP},
		#{crtUserId,jdbcType=NUMERIC}, #{modifyDate,jdbcType=TIMESTAMP}, #{modifyUserId,jdbcType=NUMERIC},
		#{enabled,jdbcType=NUMERIC}
		)
	</insert>

    <select id="getById" resultMap="authGroupResult">
        select
        <include refid="commonColumns" />
        <![CDATA[
	        from auth_group
	        where
		        id = #{id}
	    ]]>
    </select>

    <update id="update" parameterType="com.apabi.flow.admin.model.AuthGroup">
        UPDATE auth_group
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">
                name = #{name},
            </if>
            <if test="orgId != null">
                org_id = #{orgId},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="crtDate != null">
                crt_date = #{crtDate},
            </if>
            <if test="crtUserId != null">
                crt_user_id = #{crtUserId},
            </if>
            <if test="modifyDate != null">
                modify_date = #{modifyDate},
            </if>
            <if test="modifyUserId != null">
                modify_user_id = #{modifyUserId},
            </if>
            <if test="enabled != null">
                enabled = #{enabled},
            </if>
        </trim>
        <where>
            id = #{id}
        </where>
    </update>

    <!-- 查询用户组用户成员-->
    <select id="getGroupUserById" resultMap="authUserResult">
		select au.id, au.user_name
		from auth_group ag,auth_user_group aug, auth_user au
		where ag.id = aug.group_id and au.id = aug.user_id and ag.id = #{id}
	</select>

    <!-- 查询剩余用户成员-->
    <select id="getRemainUserById" resultMap="authUserResult">
		select au.id,au.user_name
		from auth_user au
		where
		au.id not in(select au.id
		from auth_group ag,auth_user_group aug, auth_user au
		where ag.id = aug.group_id and au.id = aug.user_id and ag.id = #{id})
	</select>

    <!-- 根据groupid查询哪些用户在这个组里面-->
    <select id="getUserNameByGroupId" resultMap="authUserResult">
		select au.user_name
		from auth_user_group aug,
		auth_user au
		where aug.user_id = au.id and aug.group_id = #{id}
	</select>

    <!-- 查询用户组角色信息-->
    <select id="getGroupRoleById" resultMap="authRoleResult">
		select ar.id, ar.name, ar.role_code
		from auth_group ag,auth_role_group arg, auth_role ar
		where ag.id = arg.group_id and ar.id = arg.role_id and ag.id = #{id}
	</select>

    <!-- 查询剩余角色信息-->
    <select id="getRemainRoleById" resultMap="authRoleResult">
		select ar.id, ar.name, ar.role_code
		from auth_role ar
		where
		ar.id not in(select ar.id
		from auth_group ag,auth_role_group arg, auth_role ar
		where ag.id = arg.group_id and ar.id = arg.role_id and ag.id = #{id})
	</select>

    <delete id="batchDelete" parameterType="java.util.List">
        <![CDATA[
        delete from auth_group
    	]]>
        <where>
            id in
            <foreach collection="ids" item="id" index="index" open="(" separator="," close=")">
                #{id}
            </foreach>
        </where>
    </delete>

    <!-- 根据groupid查询角色具有的res-->
    <select id="getGroupResById" resultMap="getGroupResById">
		select ar.id, ar.name, ar.type
		from auth_group ag,
			 auth_role_group arg,
			 auth_res_role arr,
			 auth_res ar
		where ar.id = arr.res_id and arr.role_id = arg.role_id and arg.group_id = ag.id and ag.id = #{id}
	</select>
</mapper>